=head1 NAME

Perlbal::Manual::Configuration - How to configure Perlbal


=head2 VERSION

This document refers to Perlbal 1.76.


=head2 Using a configuration file

By default, perlbal looks for a configuration file at C</etc/perlbal/perlbal.conf>.

You can also point perlbal at a different configuration file with the -c flag.

    $ perlbal -c /home/user/perlbal.conf


=head3 Sample configuration file


...


Let's assume you want to configure two machines to serve your website and you want to let Perlbal decide how to balance the requests. For the sake of this example let's assume you have two servers serving at:

    10.0.0.1:80
    10.0.0.2:80

And now you want to use these two machines to serve your website at:

    10.0.0.3:80


Here's a sample configuration to make this happen:

    CREATE POOL mywebsite
        POOL mywebsite ADD 10.0.0.1:80
        POOL mywebsite ADD 10.0.0.2:80

    CREATE SERVICE service_mywebsite
        SET role            = reverse_proxy
        SET pool            = mywebsite
        SET listen          = 10.0.0.3:80
    ENABLE service_mywebsite

The first line defines a pool of machines called C<mywebsite>. The second and third lines add your two machines to that pool (note that the indentation is not mandatory).

After that you define a service called C<service_mywebsite> set to listen on C<10.0.0.3:80> and using the pool C<mywebsite> to serve the requests. The role is indeed C<reverse_proxy>, as the architecture used is the same both for setting up Perlbal as a Load Balancer and as a Reverse Proxy (for more information on this see section C<Load Balancer vs. Reverse Proxy> of this document).

The last line is what allows you have several services configured in a file even if they are not currently active (a common scenario is to configure everything on the file and then enable/disable services on-the-fly as required; see C<Perlbal::Manual::Management> for more information on this process).


...


=head3 Pools

...


=head3 Services

...


=head3 Parameters

You can set parameters via commands of either forms:

    SET <service-name> <param> = <value>
    SET <param> = <value>

For a full list of parameters see C<Perlbal::Manual::LoadBalancer>, C<Perlbal::Manual::ReverseProxy> or C<Perlbal::Manual::WebServer>.


=head3 B<Note on types>:

'bool' values can be set using one of 1, true, yes, on, 0, false, off, or no.

'size' values are in integer bytes, or an integer followed by 'b', 'k', or 'm' (case-insensitive) for bytes, KiB, or MiB.


=head3 Configuring a pool in a separate file

You can create a pool in a separate file by using the C<nodefile> parameter:

    CREATE POOL dynamic
        SET nodefile = conf/nodelist.dat

This separate file should contain IP addresses, one per line (empty lines are ignored, as well as comments started by the L<#> sign).

Check C<conf/load-balancer.conf> and C<conf/nodelist.dat> for an example.


=head3 Comments

...


=head2 SEE ALSO

C<Perlbal::Manual::Management>.
